name: POI Build

on:
  workflow_dispatch:
  push:
    branches: 
      - master
    paths:
      - 'apis/poi/**'
  pull_request:
    branches: 
      - master
    paths:
      - 'apis/poi/**'
env:
  AZURE_RG: openhackuc9203t8rg
  AZURE_WEBAPP_NAME: openhackuc9203t8poi
  AZURE_WEBAPP_SLOT: staging
  AZURE_WEBAPP_URL:
  AZURE_WEBAPP_STAGING_URL:
  
jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Setup .NET Core
  #     uses: actions/setup-dotnet@v1
  #   - name: Install dependencies
  #     run: dotnet restore ./apis/poi/
  #   - name: Build
  #     run: dotnet build ./apis/poi/ --configuration Release --no-restore
  #   - name: Test
  #     run: dotnet test ./apis/poi/ --no-restore --verbosity normal
  #   - name: Issue
  #     if: ${{ failure() }}
  #     uses: JasonEtco/create-an-issue@v2
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-and-deploy-staging:  
    runs-on: ubuntu-latest
    # needs: build
    if: github.event_name != 'pull_request'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to ACR
      uses: docker/login-action@v1
      with:
        registry: openhackuc9203t8acr.azurecr.io
        username: ${{ secrets.ACR_USER }}
        password: ${{ secrets.ACR_PASSWORD }}
    - name: Docker build
      run: docker build ./apis/poi/web/ -t openhackuc9203t8acr.azurecr.io/devopsoh/api-poi:${{github.run_number}}
    - name: Docker push
      run: docker push openhackuc9203t8acr.azurecr.io/devopsoh/api-poi:${{github.run_number}}
            
    - name: 'Deploy to Azure Web App for Container'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_POI_STAGING  }}
        slot-name: ${{ env.AZURE_WEBAPP_SLOT }}
        images: openhackuc9203t8acr.azurecr.io/devopsoh/api-poi:${{github.run_number}}
            
  validate-and-swap-prod:
      if: github.ref == 'refs/heads/master'
      runs-on: ubuntu-latest
      needs: build-and-deploy-staging
      steps:
      - name: curl
        id: health-check
        uses: satak/webrequest-action@master
        with:
          url: ${{env.AZURE_WEBAPP_STAGING_URL}}api/healthcheck/poi
          method: GET
      - name: Login via Az module
        uses: azure/login@v1.1
        with: 
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Check Output Swap Slots
        shell: pwsh
        run: |
          $output = '${{ steps.health-check.outputs.output }}' | ConvertFrom-Json
          Write-Host " Status code is $($output.statusCode) "
          if($($output.statusCode) -eq 200) {
          Write-host "Healthy"
          az webapp deployment slot swap --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RG }} --slot staging --target-slot production
          }
          else {
          Write-Error "API is not healthy"
          }
          
  revert-prod:
      if: github.ref == 'refs/heads/master'
      runs-on: ubuntu-latest
      needs: validate-and-swap-prod
      steps:
      - name: curl
        id: health-check
        uses: satak/webrequest-action@master
        with:
          url: ${{env.AZURE_WEBAPP_URL}}api/healthcheck/poi
          method: GET
      - name: Login via Az module
        uses: azure/login@v1.1
        with: 
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Check Output Swap Slots
        shell: pwsh
        run: |
          $output = '${{ steps.health-check.outputs.output }}' | ConvertFrom-Json
          Write-Host " Status code is $($output.statusCode) "
          if($($output.statusCode) -eq 200) {
          Write-host "Healthy"
          }
          else {
          Write-Host "API is not healthy"
          az webapp deployment slot swap --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RG }} --slot staging --target-slot production
          }